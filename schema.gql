# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

type Mutation {
  addProfile(profile: ProfileInput!): Profile!
}

# Mongo object id scalar type
scalar ObjectId

type Profile {
  id: ObjectId!
  created: DateTime!
  updated: DateTime!
  name: String!
  description: String
}

input ProfileInput {
  name: String!
  description: String
}

enum ProfileSortField {
  id
  name
  created
  updated
}

input ProfileSortInput {
  field: ProfileSortField!
  direction: SortDirection!
}

type Query {
  profiles(skip: Int = 0, take: Int = 25, sort: [ProfileSortInput!] = []): [Profile!]!
  profile(name: String!): Profile!
}

enum SortDirection {
  ASC
  DESC
}
